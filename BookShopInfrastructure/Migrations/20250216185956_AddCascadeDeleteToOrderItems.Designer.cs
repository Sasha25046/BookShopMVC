// <auto-generated />
using System;
using BookShopInfrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookShopInfrastructure.Migrations
{
    [DbContext(typeof(BookShopContext))]
    [Migration("20250216185956_AddCascadeDeleteToOrderItems")]
    partial class AddCascadeDeleteToOrderItems
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorsAndProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "AuthorId")
                        .HasName("PK__AuthorsA__E301690EAFB4EBF0");

                    b.HasIndex("AuthorId");

                    b.ToTable("AuthorsAndProducts", (string)null);
                });

            modelBuilder.Entity("BookShopDomain.Model.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Authors__3214EC07C5BBF80C");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("BookShopDomain.Model.BookStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__BookStat__3214EC07EC3D2A04");

                    b.ToTable("BookStatuses");
                });

            modelBuilder.Entity("BookShopDomain.Model.Buyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Buyers__3214EC074C80BDCC");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("BookShopDomain.Model.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Genres__3214EC07FA02F4EF");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("BookShopDomain.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DeliveryDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("OrderDate")
                        .HasColumnType("date");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Orders__3214EC077537179C");

                    b.HasIndex("BuyerId");

                    b.HasIndex("StatusId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BookShopDomain.Model.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__OrderIte__3214EC079303E587");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("BookShopDomain.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Products__3214EC070EAD5950");

                    b.HasIndex("BookStatusId");

                    b.HasIndex("SellerId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BookShopDomain.Model.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Sellers__3214EC0734A6514C");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("BookShopDomain.Model.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Statuses__3214EC07EF32BEC5");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("GenresAndProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "GenreId")
                        .HasName("PK__GenresAn__4434969A91FB693B");

                    b.HasIndex("GenreId");

                    b.ToTable("GenresAndProducts", (string)null);
                });

            modelBuilder.Entity("AuthorsAndProduct", b =>
                {
                    b.HasOne("BookShopDomain.Model.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .IsRequired()
                        .HasConstraintName("FK__AuthorsAn__Autho__4BAC3F29");

                    b.HasOne("BookShopDomain.Model.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__AuthorsAn__Produ__4AB81AF0");
                });

            modelBuilder.Entity("BookShopDomain.Model.Order", b =>
                {
                    b.HasOne("BookShopDomain.Model.Buyer", "Buyer")
                        .WithMany("Orders")
                        .HasForeignKey("BuyerId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__BuyerId__4F7CD00D");

                    b.HasOne("BookShopDomain.Model.Status", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__StatusId__4E88ABD4");

                    b.Navigation("Buyer");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("BookShopDomain.Model.OrderItem", b =>
                {
                    b.HasOne("BookShopDomain.Model.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__OrderItem__Order__534D60F1");

                    b.HasOne("BookShopDomain.Model.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderItem__Produ__52593CB8");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BookShopDomain.Model.Product", b =>
                {
                    b.HasOne("BookShopDomain.Model.BookStatus", "BookStatus")
                        .WithMany("Products")
                        .HasForeignKey("BookStatusId")
                        .IsRequired()
                        .HasConstraintName("FK__Products__BookSt__4316F928");

                    b.HasOne("BookShopDomain.Model.Seller", "Seller")
                        .WithMany("Products")
                        .HasForeignKey("SellerId")
                        .IsRequired()
                        .HasConstraintName("FK__Products__Seller__440B1D61");

                    b.Navigation("BookStatus");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("GenresAndProduct", b =>
                {
                    b.HasOne("BookShopDomain.Model.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .IsRequired()
                        .HasConstraintName("FK__GenresAnd__Genre__47DBAE45");

                    b.HasOne("BookShopDomain.Model.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__GenresAnd__Produ__46E78A0C");
                });

            modelBuilder.Entity("BookShopDomain.Model.BookStatus", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BookShopDomain.Model.Buyer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BookShopDomain.Model.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("BookShopDomain.Model.Product", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("BookShopDomain.Model.Seller", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BookShopDomain.Model.Status", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
